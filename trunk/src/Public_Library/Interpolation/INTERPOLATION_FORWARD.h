//#####################################################################
// Copyright 2006, Geoffrey Irving.
// This file is part of PhysBAM whose distribution is governed by the license contained in the accompanying file PHYSBAM_COPYRIGHT.txt.
//#####################################################################
// Header INTERPOLATION_FORWARD
//#####################################################################
#ifndef __INTERPOLATION_FORWARD__
#define __INTERPOLATION_FORWARD__

namespace PhysBAM{

template<class T_GRID> class FACE_LOOKUP_UNIFORM;
template<class T_GRID> class FACE_LOOKUP_DYADIC;
template<class T_GRID> class FACE_LOOKUP_RLE;
template<class T_GRID> class FACE_LOOKUP_FIRE_DYADIC;
template<class T_GRID> class FACE_LOOKUP_FIRE_MULTIPHASE_DYADIC;
template<class T_GRID> class FACE_LOOKUP_FIRE_MULTIPHASE_RLE;
template<class T_GRID> class FACE_LOOKUP_FIRE_MULTIPHASE_UNIFORM;
template<class T_GRID> class FACE_LOOKUP_FIRE_RLE;
template<class T_GRID,class T_NESTED_LOOKUP=FACE_LOOKUP_UNIFORM<T_GRID> > class FACE_LOOKUP_COLLIDABLE_UNIFORM;
template<class T_GRID,class T_NESTED_LOOKUP=FACE_LOOKUP_DYADIC<T_GRID> > class FACE_LOOKUP_COLLIDABLE_DYADIC;
template<class T_GRID,class T_NESTED_LOOKUP=FACE_LOOKUP_RLE<T_GRID> > class FACE_LOOKUP_COLLIDABLE_RLE;

template<class T_GRID,class T_FACE_LOOKUP=FACE_LOOKUP_UNIFORM<T_GRID> > class AVERAGING_UNIFORM;
template<class T_GRID,class T_FACE_LOOKUP=FACE_LOOKUP_DYADIC<T_GRID> > class AVERAGING_DYADIC;
template<class T_GRID,class T_FACE_LOOKUP=FACE_LOOKUP_RLE<T_GRID> > class AVERAGING_RLE;
template<class T_GRID,class T_FACE_LOOKUP> class AVERAGING_COLLIDABLE_UNIFORM;
template<class T_GRID,class T_FACE_LOOKUP> class AVERAGING_COLLIDABLE_DYADIC;
template<class T_GRID,class T_FACE_LOOKUP> class AVERAGING_COLLIDABLE_RLE;

template<class T,class T2> class LINEAR_INTERPOLATION_HELPER;
template<class T_GRID> class LINEAR_INTERPOLATION_DYADIC_HELPER;
template<class T_GRID> class LINEAR_INTERPOLATION_MAC_1D_HELPER;
template<class T_GRID> class LINEAR_INTERPOLATION_MAC_2D_HELPER;
template<class T_GRID> class LINEAR_INTERPOLATION_MAC_3D_HELPER;
template<class T> class LINEAR_INTERPOLATION_OCTREE_HELPER;
template<class T> class LINEAR_INTERPOLATION_QUADTREE_HELPER;
template<class T_GRID> class LINEAR_INTERPOLATION_RLE_HELPER;

template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_UNIFORM<T_GRID> > class INTERPOLATION_UNIFORM;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_DYADIC<T_GRID> > class INTERPOLATION_DYADIC;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_RLE<T_GRID> > class INTERPOLATION_RLE;

template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_UNIFORM<T_GRID> > class LINEAR_INTERPOLATION_UNIFORM;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_DYADIC<T_GRID> > class LINEAR_INTERPOLATION_DYADIC;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_RLE<T_GRID> > class LINEAR_INTERPOLATION_RLE;

template<class T_GRID,class T2> class LINEAR_INTERPOLATION_COLLIDABLE_CELL_UNIFORM;
template<class T_GRID,class T2> class LINEAR_INTERPOLATION_COLLIDABLE_CELL_DYADIC;
template<class T_GRID,class T2> class LINEAR_INTERPOLATION_COLLIDABLE_CELL_RLE;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_COLLIDABLE_UNIFORM<T_GRID> > class LINEAR_INTERPOLATION_COLLIDABLE_FACE_UNIFORM;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_COLLIDABLE_DYADIC<T_GRID> > class LINEAR_INTERPOLATION_COLLIDABLE_FACE_DYADIC;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_COLLIDABLE_RLE<T_GRID> > class LINEAR_INTERPOLATION_COLLIDABLE_FACE_RLE;

template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_DYADIC<T_GRID> > class LINEAR_INSIDE_CONSTANT_OUTSIDE_INTERPOLATION_DYADIC;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_UNIFORM<T_GRID> > class LINEAR_INSIDE_CONSTANT_OUTSIDE_INTERPOLATION_UNIFORM;

template<class T,class T2> class BSPLINE;
template<class T> class BSPLINE_QUATERNION;
template<class T_GRID,class T2> class CONSTANT_INTERPOLATION;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_UNIFORM<T_GRID> > class CATMULL_ROM_SPLINE_INTERPOLATION;
template<class T_GRID,class T2,class T_FACE_LOOKUP=FACE_LOOKUP_UNIFORM<T_GRID> > class CUBIC_MN_INTERPOLATION;
template<class T> class FACE_CONTROL_PARAMETERS_INTERPOLATION_UNIFORM;
template<class T_GRID> class SCATTERED_INTERPOLATION;
template<class T,class T2> class INTERPOLATION_CURVE;

template<class T_INTERPOLATION,class T_NEW> struct REBIND;
template<class T_GRID,class T2,class T_LOOKUP,class T_NEW> struct REBIND<INTERPOLATION_UNIFORM<T_GRID,T2,T_LOOKUP>,T_NEW>{typedef INTERPOLATION_UNIFORM<T_GRID,T_NEW,T_LOOKUP> TYPE;};
template<class T_GRID,class T2,class T_LOOKUP,class T_NEW> struct REBIND<INTERPOLATION_DYADIC<T_GRID,T2,T_LOOKUP>,T_NEW>{typedef INTERPOLATION_DYADIC<T_GRID,T_NEW,T_LOOKUP> TYPE;};
template<class T_GRID,class T2,class T_LOOKUP,class T_NEW> struct REBIND<INTERPOLATION_RLE<T_GRID,T2,T_LOOKUP>,T_NEW>{typedef INTERPOLATION_RLE<T_GRID,T_NEW,T_LOOKUP> TYPE;};
template<class T_GRID,class T2,class T_LOOKUP,class T_NEW> struct REBIND<LINEAR_INTERPOLATION_UNIFORM<T_GRID,T2,T_LOOKUP>,T_NEW>{
    typedef LINEAR_INTERPOLATION_UNIFORM<T_GRID,T_NEW,T_LOOKUP> TYPE;};
template<class T_GRID,class T2,class T_LOOKUP,class T_NEW> struct REBIND<LINEAR_INTERPOLATION_DYADIC<T_GRID,T2,T_LOOKUP>,T_NEW>{typedef LINEAR_INTERPOLATION_DYADIC<T_GRID,T_NEW,T_LOOKUP> TYPE;};
template<class T_GRID,class T2,class T_LOOKUP,class T_NEW> struct REBIND<LINEAR_INTERPOLATION_RLE<T_GRID,T2,T_LOOKUP>,T_NEW>{typedef LINEAR_INTERPOLATION_RLE<T_GRID,T_NEW,T_LOOKUP> TYPE;};

}
#endif
